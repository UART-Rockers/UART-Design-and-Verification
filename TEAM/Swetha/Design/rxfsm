module receiverfsm(sb,clk,rst,paritybiterror,shiftdata,parityload,checkstop);
      input sb,clk,rst,paritybiterror;
      output reg shiftdata,parityload,checkstop;
      integer x,count;
  reg [1:0] state,next;
      parameter [1:0] idlee=2'b00,datarxn=2'b01,paritycheck=2'b10,stopcheck=2'b11;

      always @(posedge clk) begin
                if(rst) begin
                    state<=idlee;
                    count<=0;
                end
                else begin
                    state<=next;
                       if(state==datarxn) begin
                             count<=count+1;
                             //x<=x+1;
                       end
                       else begin
                           count<=0;
                       end
                end
      end

  always @(*) begin
          case(state) 
              idlee: begin
                  //x<=0;
                  shiftdata<=0;
                  parityload<=0;
                  checkstop<=0;
                      if(sb==0) begin
                             next<=datarxn;
                      end
                      else begin
                          next<=idlee;
                      end
              end
              datarxn: begin
                  shiftdata<=1;
                  parityload<=0;
                  checkstop<=0;
                if(count==7) begin
                             next<=paritycheck;
                             //x<=x+1;
                      end
                      else begin
                          next<=datarxn;
                      end
              end
              paritycheck: begin
                  shiftdata<=0;
                  parityload<=1;
                  checkstop<=0;
                      if(paritybiterror==0) begin
                             next<=stopcheck;
                             //x<=x+1;
                      end
                      else begin
                          next<=idlee;
                      end
              end
              stopcheck: begin
                  shiftdata<=0;
                  parityload<=0;
                  checkstop<=1;
                      //if(x==10) begin
                             next<=idlee;
                      //end
              end
              default: begin
                  shiftdata<=0;
                  parityload<=0;
                  checkstop<=0;
                  next<=idlee;
              end
            endcase
          end
endmodule


//Test
`timescale 1ns/1ns
`include "design.v"
module tb;
      reg sb,clk,rst,paritybiterror;
      wire shiftdata,parityload,checkstop;

  receiverfsm rf(.sb(sb),.clk(clk),.rst(rst),.paritybiterror(paritybiterror),.shiftdata(shiftdata),.parityload(parityload),.checkstop(checkstop));
      initial begin
        $dumpfile("a.vcd");
        $dumpvars(0,tb);
         $monitor($time,"sb=%b,clk=%b,rst=%b,paritybiterror=%b,shiftdata=%b,parityload=%b,checkstop=%b",sb,clk,rst,paritybiterror,shiftdata,parityload,checkstop);
         sb=0;clk=1;rst=0;
         #9 paritybiterror=0;
         #46 rst=1;
         $finish;
      end
   always #2 clk=~clk;


endmodule
